require(tm)
require(tidytext)
require(RTextTools)
require(knitr)
require(tidyverse)
require(kableExtra)
require(wordcloud)
require(plyr)
require(class)
require(tidyr)
require(caret)
require(ggplot2)
spam.ham <- c("easy_ham","spam")
pathname <- "C:/Users/tbao/Desktop/CUNY MSDS notes/607/week 10/project 4/spamham/"
cleancorpus <- function(Corpus){
corpus.tmp <- tm_map(Corpus,removePunctuation)      #remove punctuation
corpus.tmp <- tm_map(corpus.tmp, removeNumbers)     #remove numbers
corpus.tmp <-tm_map(corpus.tmp,tolower)             #change to low case
corpus.tmp <- tm_map(corpus.tmp, removeWords,c(stopwords("english")))     #remove English stopwords
corpus.tmp <- tm_map(corpus.tmp,stripWhitespace)    #remove space
return(corpus.tmp)
}
generateTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
clean_corpus<- cleancorpus(e.cor)
e.tdm <- TermDocumentMatrix(clean_corpus)
e.tdm <- removeSparseTerms(e.tdm,.7)
}
tdm <- lapply(spam.ham,generateTDM, path=pathname)
str(tdm)
m <- as.matrix(tmd[[1]])
m <- as.matrix(tmd[[1]])  #(tmd[[1]])
newdf <- subset(df, freq > 2000)
m <- as.matrix(tdm[[2]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "easy_ham")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(5, "Dark2"),main="Title")
newdf <- subset(df, freq > 500)
a <-ggplot(newdf, aes(x=freq, y = word, color = freq)) + geom_count()
print(a)
m <- as.matrix(tdm[[1]])  #(tmd[[1]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "Spam")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(6, "Dark2"),main="Title")
newdf <- subset(df, freq > 2000)
a <-ggplot(newdf, aes(x=freq, y = word, color = freq)) + geom_count()
print(a)
m <- as.matrix(tdm[[2]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "easy_ham")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(5, "Dark2"),main="Title")
newdf <- subset(df, freq > 500)
a <-ggplot(newdf, aes(x=freq, y = word, color = freq)) + geom_count()
print(a)
## Function to build TDM
buildTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
e.cor.cl <- cleancorpus(e.cor)
e.tdm <- DocumentTermMatrix(e.cor.cl)
e.tdm <- removeSparseTerms(e.tdm,.7)
result <- list(name=category, tdm=e.tdm)
}
require(tm)
require(tidytext)
require(RTextTools)
require(knitr)
require(tidyverse)
require(kableExtra)
require(wordcloud)
require(plyr)
require(class)
require(tidyr)
require(caret)
require(ggplot2)
setwd("C:/Users/tbao/Desktop/project 4")
getwd()
spam.ham <- c("easy_ham","spam")
pathname <- "C:/Users/tbao/Desktop/project 4"
cleancorpus <- function(Corpus){
corpus.tmp <- tm_map(Corpus,removePunctuation)      #remove punctuation
corpus.tmp <- tm_map(corpus.tmp, removeNumbers)     #remove numbers
corpus.tmp <-tm_map(corpus.tmp,tolower)             #change to low case
corpus.tmp <- tm_map(corpus.tmp, removeWords,c(stopwords("english")))     #remove English stopwords
corpus.tmp <- tm_map(corpus.tmp,stripWhitespace)    #remove space
return(corpus.tmp)
}
generateTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
clean_corpus<- cleancorpus(e.cor)
e.tdm <- TermDocumentMatrix(clean_corpus)
e.tdm <- removeSparseTerms(e.tdm,.7)
}
setwd("C:/Users/tbao/Desktop/project 4")
getwd()
getwd()
tdm <- lapply(spam.ham,generateTDM, path=pathname)
tdm <- lapply(spam.ham,generateTDM, path=pathname)
tdm <- lapply(spam.ham,generateTDM, path=pathname)
tdm <- lapply(spam.ham,generateTDM, path=pathname)
require(tm)
require(tidytext)
require(RTextTools)
require(knitr)
require(tidyverse)
require(kableExtra)
require(wordcloud)
require(plyr)
require(class)
require(tidyr)
require(caret)
require(ggplot2)
setwd("C:/Users/tbao/Desktop/project 4")
getwd()
spam.ham <- c("easy_ham","spam")
pathname <- "C:/Users/tbao/Desktop/project 4"
cleancorpus <- function(Corpus){
corpus.tmp <- tm_map(Corpus,removePunctuation)      #remove punctuation
corpus.tmp <- tm_map(corpus.tmp, removeNumbers)     #remove numbers
corpus.tmp <-tm_map(corpus.tmp,tolower)             #change to low case
corpus.tmp <- tm_map(corpus.tmp, removeWords,c(stopwords("english")))     #remove English stopwords
corpus.tmp <- tm_map(corpus.tmp,stripWhitespace)    #remove space
return(corpus.tmp)
}
generateTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
clean_corpus<- cleancorpus(e.cor)
e.tdm <- TermDocumentMatrix(clean_corpus)
e.tdm <- removeSparseTerms(e.tdm,.7)
}
cleancorpus <- function(Corpus){
corpus.tmp <- tm_map(corpus,removePunctuation)      #remove punctuation
corpus.tmp <- tm_map(corpus.tmp, removeNumbers)     #remove numbers
corpus.tmp <-tm_map(corpus.tmp,tolower)             #change to low case
corpus.tmp <- tm_map(corpus.tmp, removeWords,c(stopwords("english")))     #remove English stopwords
corpus.tmp <- tm_map(corpus.tmp,stripWhitespace)    #remove space
return(corpus.tmp)
}
cleancorpus <- function(Corpus){
corpus.tmp <- tm_map(Corpus,removePunctuation)      #remove punctuation
corpus.tmp <- tm_map(corpus.tmp, removeNumbers)     #remove numbers
corpus.tmp <-tm_map(corpus.tmp,tolower)             #change to low case
corpus.tmp <- tm_map(corpus.tmp, removeWords,c(stopwords("english")))     #remove English stopwords
corpus.tmp <- tm_map(corpus.tmp,stripWhitespace)    #remove space
return(corpus.tmp)
}
generateTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
clean_corpus<- cleancorpus(e.cor)
e.tdm <- TermDocumentMatrix(clean_corpus)
e.tdm <- removeSparseTerms(e.tdm,.7)
}
tdm <- lapply(spam.ham,generateTDM, path=pathname)
str(tdm)
m <- as.matrix(tmd[[1]])
newdf <- subset(df, freq > 500)
a <-ggplot(newdf, aes(x=freq, y = word, color = freq)) + geom_count()
print(a)
m <- as.matrix(tdm[[2]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "easy_ham")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(5, "Dark2"),main="Title")
m <- as.matrix(tdm[[1]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "Spam")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(6, "Dark2"),main="Title")
m <- as.matrix(tdm[[2]])
word_freqs <- sort(rowSums(m), decreasing=TRUE)
head(word_freqs,100)
df <- data.frame(word=names(word_freqs), freq=word_freqs)
layout(matrix(c(1, 2), nrow=2), heights=c(1, 4))
par(mar=rep(0, 4))
plot.new()
text(x=0.5, y=0.5, "easy_ham")
wordcloud(df$word, df$freq,max.words = 200, random.order=FALSE, colors=brewer.pal(5, "Dark2"),main="Title")
## Function to build TDM
buildTDM <- function(category,path){
e.dir <- sprintf("%s/%s",path,category)
e.cor <- Corpus(DirSource(directory=e.dir))
e.cor.cl <- cleancorpus(e.cor)
e.tdm <- DocumentTermMatrix(e.cor.cl)
e.tdm <- removeSparseTerms(e.tdm,.7)
result <- list(name=category, tdm=e.tdm)
}
##Function to bind two list elements of TDM together mapped with (spam/easyham)
bindcategory<- function(tdm){
e.mat <- data.matrix(tdm[["tdm"]])
e.df <- as.data.frame(e.mat)
e.df <- cbind(e.df, rep(tdm[["name"]],nrow(e.df)))
colnames(e.df)[ncol(e.df)] <- "target_category"
return(e.df)
}
##Build TDM
tdm <- lapply(spam.ham,buildTDM, path=pathname)
##Join list and fill na with 0
tdm_joined <- do.call(rbind.fill, my_tdm)
train.idx <- sample(nrow(tdm_joined),.7*nrow(tdm_joined),replace = FALSE)
head(train.idx)
head(test.idx)
round(prop.table(table(tdm_joined$target_category))*100)
